<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:\Users\Adnan\Desktop\Diplomski\officer\officer-api\services\officer.db" readonly="0" foreign_keys="" case_sensitive_like="" temp_store="" wal_autocheckpoint="" synchronous=""/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="4344"/><column_width id="4" width="0"/></tab_structure><tab_browse><current_table name="0,0:"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="BasicViews.sql">CREATE VIEW vw_UserRole as
SELECT
	u._id,
	u.UserName,
	e.FullName,
	e.Email,
	e.Position,
	e.OIB,
	e.DOB,
	e.Address,
	r.RoleName,
	r._id as RoleId
FROM User u
LEFT JOIN Role r ON r._id = u._id
LEFT JOIN Employee e ON e._id = u.EmployeeId

DROP VIEW vw_AssetAgreementFull;

CREATE VIEW vw_AssetAgreementFull as
SELECT
	aa._id,
	aa.Name,
	aa.Status,
	aa.Reason,
	aa.DocumentURL,
	u.FullName,
	u.OIB,
	u.Address,
	u.RoleName,
	(
		SELECT group_concat(a.Name) 
		FROM AssetAgreementAsset aaa
		LEFT JOIN Asset a ON a._id = aaa.AssetId
		WHERE aaa.AssetAgreementId = aa._id
	) as Assets,
	(
		SELECT group_concat(ur.FullName)
		FROM AssetAgreementReviewer aar
		INNER JOIN vw_UserRole ur ON ur._id = aar.ReviewerId
		WHERE aar.AssetAgreementId = aa._id
	) as Reviewers
FROM AssetAgreement aa
LEFT JOIN vw_UserRole u ON u._id = aa.UserId

CREATE VIEW vw_AssetAgreementDetails as
SELECT
	a.*
FROM AssetAgreement aa
LEFT JOIN AssetAgreementAsset aaa ON aaa.AssetId = a._id
WHERE aaa._id IS NULL

CREATE VIEW vw_UnassignedAssets as
SELECT
	a.*
FROM Asset a
LEFT JOIN AssetAgreementAsset aaa ON aaa.AssetId = a._id
WHERE aaa._id IS NULL
</sql><sql name="SQL 2">CREATE TABLE RolePrivileges(
	_id INTEGER PRIMARY KEY NOT NULL,
	RoleId INTEGER NOT NULL,
	Act TEXT NOT NULL,
	Object TEXT NOT NULL,
	FOREIGN KEY(RoleId) REFERENCES Role(_id)
);

CREATE INDEX idx_roleid_object_act
ON RolePrivileges (RoleId, Act, Object);

INSERT INTO Role(RoleName) VALUES ('ADMIN');
INSERT INTO Role(RoleName) VALUES ('MANAGER');
INSERT INTO Role(RoleName) VALUES ('EMPLOYEE');

INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'CREATE', 'Asset');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'READ', 'Asset');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'UPDATE', 'Asset');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'DELETE', 'Asset');


INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'CREATE', 'AssetAgreement');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'READ', 'AssetAgreement');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'UPDATE', 'AssetAgreement');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'DELETE', 'AssetAgreement');


INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'CREATE', 'AssetGroup');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'READ', 'AssetGroup');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'UPDATE', 'AssetGroup');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'DELETE', 'AssetGroup');


INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'CREATE', 'Employee');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'READ', 'Employee');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'UPDATE', 'Employee');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'DELETE', 'Employee');


INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'CREATE', 'User');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'READ', 'User');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'UPDATE', 'User');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'ADMIN'), 'DELETE', 'User');

INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'EMPLOYEE'), 'READ', 'Asset');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'EMPLOYEE'), 'READ', 'AssetGroup');
INSERT INTO RolePrivileges(RoleId, Act, Object) VALUES ( (SELECT r._id FROM Role r WHERE r.RoleName = 'EMPLOYEE'), 'READ', 'UserAgreement');


</sql><sql name="BasicStructure.sql">CREATE TABLE AssetGroup(
	_id INTEGER PRIMARY KEY NOT NULL,
	Name TEXT(50) NOT NULL UNIQUE,
	Description TEXT(255) NULL,
	Active BIT NOT NULL DEFAULT 1
);

CREATE TABLE Asset(
	_id INTEGER PRIMARY KEY NOT NULL,
	Name TEXT(50) NOT NULL,
	Description TEXT(255) NULL,
	Label TEXT(30) NOT NULL UNIQUE,
	Active BIT NOT NULL DEFAULT 1,
	PurchaseDate date NULL,
	AssetGroupId INTEGER NULL,
	FOREIGN KEY(AssetGroupId) REFERENCES AssetGroup(_id)
);

CREATE TABLE Role(
	_id INTEGER PRIMARY KEY NOT NULL,
	RoleName TEXT(80) NOT NULL UNIQUE
);

CREATE TABLE User(
	_id INTEGER PRIMARY KEY NOT NULL,
	UserName TEXT(30) NOT NULL,
	Password TEXT(256) NOT NULL,
	RoleId INTEGER NOT NULL,
	EmployeeId INTEGER NOT NULL,
	FOREIGN KEY(RoleId) REFERENCES Role(_id),
	FOREIGN KEY(EmployeeId) REFERENCES Employee(_id)
);

CREATE TABLE Employee(
	_id INTEGER PRIMARY KEY NOT NULL,
	Active INTEGER NOT NULL DEFAULT 1,
	FullName TEXT NOT NULL,
	Email TEXT(50) NOT NULL,
	Position TEXT NULL,
	Adress TEXT NOT NULL
	DOB date NULL,
	OIB INTEGER(11) NOT NULL UNIQUE
);
CREATE TABLE AssetAgreement(
	_id INTEGER PRIMARY KEY NOT NULL,
	Name TEXT NOT NULL,
	Reason TEXT NOT NULL,
	Status TEXT(10) NOT NULL,
	DocumentURL TEXT(255) NULL,
	UserId INTEGER NOT NULL,
	FOREIGN KEY(UserId) REFERENCES User(_id)
);

CREATE TABLE AssetAgreementAsset(
	_id INTEGER PRIMARY KEY NOT NULL,
	AssetId INTEGER NOT NULL UNIQUE,
	AssetAgreementId INTEGER NOT NULL,
	FOREIGN KEY(AssetId) REFERENCES Asset(_id),
	FOREIGN KEY(AssetAgreementId) REFERENCES AssetAgreement(_id)
);

CREATE TABLE AssetAgreementReviewer(
	_id INTEGER PRIMARY KEY NOT NULL,
	AssetAgreementId INTEGER NOT NULL,
	ReviewerId INTEGER NOT NULL,
	Signed BIT NOT NULL DEFAULT 0,
	FOREIGN KEY(ReviewerId) REFERENCES User(_id),
	FOREIGN KEY(AssetAgreementId) REFERENCES AssetAgreement(_id)
)

</sql><current_tab id="0"/></tab_sql></sqlb_project>
